############################################################
#	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers= java.util.logging.ConsoleHandler, java.util.logging.FileHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler, com.symbian.utils.log.NetSendHandler, com.symbian.utils.log.EmailHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= INFO

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
java.util.logging.FileHandler.pattern = UartEchoServer%g_%u.log
#java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 10
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.level = INFO

# Limit the message that are printed on the console to FINE and above.
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = com.symbian.utils.log.SimpleFormatter
# com.symbian.utils.log.SimpleFormatter OR java.util.logging.SimpleFormatter OR java.util.logging.XMLFormatter OR ...

java.util.logging.SocketHandler.level=ALL
java.util.logging.SocketHandler.host=localhost
java.util.logging.SocketHandler.port=2000

############################################################
# Symbian Specific Handlers
# Please not that you must manually download the mail.jar and smtp.jar from www.java.com for this to work.
#
# numbererrors: Number of errors to wait for before sending (if 0 won't be sent)
# sendlevel: minimun level to send errors. Must be same as or higher than global level (default WARNING)
############################################################

# NetSend Handler: If you want errors to be sent by NetSend
com.symbian.utils.log.NetSendHandler.numbererrors = 5
com.symbian.utils.log.NetSendHandler.sendlevel = WARNING
com.symbian.utils.log.NetSendHandler.ip = lon-XXYY

# Email Handler: If you want errors to be sent by Email
com.symbian.utils.log.EmailHandler.numbererrors = 5
com.symbian.utils.log.EmailHandler.sendlevel = WARNING
com.symbian.utils.log.EmailHandler.fromaddress = xx.yy@symbian.com
com.symbian.utils.log.EmailHandler.toaddress = xx.yy@symbian.com
# note smtp doesn't currently support SSL
com.symbian.utils.log.EmailHandler.server = smtp.xx.yy
